#!/bin/csh -f

# Check for enough arguments
set argc="$#argv"
if ("$argc" < 4) then
  echo "Usage:  update_parallel nprocs basename command_type command"
  exit 1
endif

echo "--- $argv ---"

set cmd_dir=`dirname $0`

set all_resolved="-------- | All TMs resolved"

set nprocs="$argv[1]"
set basename="$argv[2]"
set command_type="$argv[3]"

# Create an empty unknown file if there isn't one
if (! -e "$basename.unknown") then
  touch $basename.unknown
endif

# Create an empty undecided file if there isn't one
if (! -e "$basename.undecided") then
  touch $basename.undecided
endif

# Find log file (if it exists) and set the current log number
set logfile="$basename.log"
if (-e "$logfile" && ! -z "logfile") then
  set last_entry=`tail -1 "$logfile"`
  if ("$last_entry" == "$all_resolved") then
    exit 0
  endif
  set log_number=`echo "$last_entry" | awk '{print $1 + 1;}'`
else
  touch "$logfile"
  set log_number=1
endif

# Get the original number of undecided and unknown TMs
set orig_undecided=`wc -l < $basename.undecided`
set orig_unknown=`wc -l < $basename.unknown`

if (${orig_undecided} == 0 && ${orig_unknown} == 0) then
  exit 0
endif

# Get the start date and command
set start_date=`\date`
set command="$argv[4-]"

# Get the number of TMs to put in each file for the parallel runs
set tm_per_unk_file=`expr \( $orig_unknown   + \( $nprocs - 1 \) \) / $nprocs`
set tm_per_und_file=`expr \( $orig_undecided + \( $nprocs - 1 \) \) / $nprocs`

echo $tm_per_unk_file $tm_per_und_file

# Number of digits in "split" pieces
set digits=6

# Construct a regular expression with '[0-9]' repeated $digits times
# and a string with '0' repeated $digits times
set count=0
set digit_string=""
set zero_string=""
while ($count < $digits)
  set digit_string="${digit_string}[0-9]"
  set zero_string="${zero_string}0"
  @ count++
end

# Split the unknown TMs into pieces and get the correct suffix
set total_count_unk=0
if ("$tm_per_unk_file" > 0) then
  split -a $digits -d -l $tm_per_unk_file $basename.unknown   $basename.unknown.

  # Move the pieces to *.unknown names and count them
  foreach i ($basename.unknown.$digit_string)
    mv $i $i.unknown
    touch $i.undecided
    @ total_count_unk++
  end
endif

set total_count_und=0
if ("$tm_per_und_file" > 0) then
  split -a $digits -d -l $tm_per_und_file $basename.undecided $basename.unknown.

  # Move the pieces to *.undecided names and count them
  foreach i ($basename.unknown.$digit_string)
    mv $i $i.undecided
    touch $i.unknown
    @ total_count_und++
  end

endif

set total_count=`echo $total_count_unk $total_count_und | awk '{ if ($1 > $2) { print $1 } else { print $2 } }'`

# Run the command on all the pieces in parallel
foreach i ($basename.unknown.$digit_string.unknown)
  time update $i:r $command_type $command &
end

# Wait for all the commands to finish
while (1)
  # Check every second
  sleep 1

  # Count the number of commands that have finished
  set count_finished=0
  if (-e $basename.unknown.$zero_string.log) then
    foreach i ($basename.unknown.$digit_string.log)
      awk -f $cmd_dir/update_parallel_done.awk $i
      if ("$status" == 0) then
        @ count_finished++
      endif
    end

    # Exit loop if all commands have finished
    if ("$count_finished" == "$total_count") then
      echo "All done..."
      break
    endif
  endif
end

# Collect all the results into the places they belong
cat $basename.unknown.$digit_string.halt      >> $basename.halt
cat $basename.unknown.$digit_string.infinite  >> $basename.infinite
cat $basename.unknown.$digit_string.undecided >  $basename.undecided
cat $basename.unknown.$digit_string.unknown   >  $basename.unknown

# Get count totals
set count_halt=`cat $basename.unknown.$digit_string.halt | wc -l`
set count_infinite=`cat $basename.unknown.$digit_string.infinite | wc -l`
set count_undecided=`cat $basename.unknown.$digit_string.undecided | wc -l`
set count_unknown=`cat $basename.unknown.$digit_string.unknown | wc -l`

# Clean up temporary files
/bin/rm -f $basename.unknown.$digit_string.*

# Log the running of the command
echo "$log_number" "$command_type" | awk '{printf("%6d %s ",$1,$2);}' >> "$basename.log"

# Get the net change in undecided and unknown TMs
set net_undecided=`expr $count_undecided - $orig_undecided`
set net_unknown=`expr $count_unknown - $orig_unknown`

# Get the end date
set end_date=`\date`
set delta_time=`Diff_Date.py "$start_date" "$end_date"`

# Log the command and print a bit more output
echo "| p $nprocs | $command | $start_date | $delta_time | $count_halt $count_infinite $net_undecided $net_unknown" >> "$basename.log"
echo "TM counts: $count_halt $count_infinite $net_undecided $net_unknown"

# Log if all the TMs have been resolved
set count_un=`cat $basename.unknown $basename.undecided | wc -l`
if ("$count_un" == "0") then
  echo "$all_resolved" >> "$basename.log"    
  echo "All TMs resolved"
endif

# Exit successfully
exit 0
