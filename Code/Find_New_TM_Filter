#!/bin/csh -f

# Parse the expected options
echo $argv | grep -q -e '--infile' 
set infileflag=$status
set infile=`echo $argv | sed -e 's/.*--infile=//' -e 's/ .*$//'`

echo $argv | grep -q -e '--outfile' 
set outfileflag=$status
set outfile=`echo $argv | sed -e 's/.*--outfile=//' -e 's/ .*$//'`

echo $argv | grep -q -e '--log_number' 
set lognumflag=$status
set lognum=`echo $argv | sed -e 's/.*--log_number=//' -e 's/ .*$//'`

echo $argv | grep -q -e '--next_machine_number' 
set nextmachnumflag=$status
set nextmachnum=`echo $argv | sed -e 's/.*--next_machine_number=//' -e 's/ .*$//'`

echo $argv | grep -q -e '--tape' 
set tapeflag=$status
set tape=`echo $argv | sed -e 's/.*--tape=//' -e 's/ .*$//'`

echo $argv | grep -q -e '--steps' 
set stepsflag=$status
set steps=`echo $argv | sed -e 's/.*--steps=//' -e 's/ .*$//'`

# Check for all required options
if ("$infileflag" != 0 || "$outfileflag" != 0 || "$lognumflag" != 0 || "$nextmachnumflag" != 0) then
  echo "Usage:  Find_New_TM_Filter --infile= --outfile= --log_number= --next_machine_number="
  exit 1
endif

# Get basename and date
set basename=$infile:r
set date=`\date`

# If there are no undecided TMs, exit so the "update" will report "No change"
set num=`cat $basename.undecided | wc -l`
if ("$num" == 0) then
  if (-e $basename.unknown) then
    /bin/cp -f $basename.unknown $basename.out
  else
    touch $basename.out
  endif
  exit 0
endif

# Temporary basename
set tmp_basename=$basename.tmp

# Clean up old files
/bin/rm -f $tmp_basename.*

# Set up temporary subproblem
if (-e $basename.log) then
  /bin/cp -f $basename.log $tmp_basename.log
else
  touch $tmp_basename.log
endif

if (-e $basename.undecided) then
  /bin/cp -f $basename.undecided $tmp_basename.undecided
else
  touch $tmp_basename.undecided
endif

touch $tmp_basename.unknown

# Convert undecided TMs to new TMs
update $tmp_basename "g" Assign_Undecideds_Filter --next_machine_number=$nextmachnum
echo ""

# Check to see if this succeeded
if ("$status" != 0) then
  echo "Assign_Undecideds_Filter update failed"
  /bin/rm -f $tmp_basename.*
  exit 1
endif

# If there are no unknown TMs, exit so the "update" will report "No change"
set num=`cat $tmp_basename.unknown | wc -l`
if ("$num" == 0) then
  echo -n "" > $basename.undecided

  # Generate the ".out" file containing all the original unknown machines and
  # the results from the subproblem
  cat $basename.unknown $tmp_basename.halt $tmp_basename.infinite $tmp_basename.undecided $tmp_basename.unknown > $basename.out

  exit 0
endif

set dual_args=""

if ("$tapeflag" == 0) then
  set dual_args="$dual_args --tape=$tape"
endif

if ("$stepsflag" == 0) then
  set dual_args="$dual_args --steps=$steps"
endif

update $tmp_basename "g" Dual_Machine_Filter.py $dual_args
echo ""

# Check to see if this succeeded
if ("$status" != 0) then
  echo "Dual_Machine_Filter.py update failed"
  /bin/rm -f $tmp_basename.*
  exit 1
endif

echo -n "" > $basename.undecided

# Generate the ".out" file containing all the original unknown machines and
# the results from the subproblem
cat $basename.unknown $tmp_basename.halt $tmp_basename.infinite $tmp_basename.undecided $tmp_basename.unknown > $basename.out

# Clean up subproblem files
/bin/rm -f $tmp_basename $tmp_basename.*
exit 0
