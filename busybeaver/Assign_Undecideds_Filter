#!/bin/csh -f

# Parse the expected options
echo $argv | grep -q -e '--infile' 
set infileflag=$status
set infile=`echo $argv | sed -e 's/.*--infile=//' -e 's/ .*$//'`

echo $argv | grep -q -e '--outfile' 
set outfileflag=$status
set outfile=`echo $argv | sed -e 's/.*--outfile=//' -e 's/ .*$//'`

echo $argv | grep -q -e '--log_number' 
set lognumflag=$status
set lognum=`echo $argv | sed -e 's/.*--log_number=//' -e 's/ .*$//'`

echo $argv | grep -q -e '--next_machine_number' 
set nextmachnumflag=$status
set nextmachnum=`echo $argv | sed -e 's/.*--next_machine_number=//' -e 's/ .*$//'`

# Check for all required options
if ("$infileflag" != 0 || "$outfileflag" != 0 || "$lognumflag" != 0 || "$nextmachnumflag" != 0) then
  echo "Usage:  Assign_Undecideds_Filter --infile= --outfile= --log_number= --next_machine_number="
  exit 1
endif

# Get basename and date
set basename=$infile:r.undecided
set date=`\date`

# If there are no undecided TMs, exit so the "update" will report "No change"
set num=`cat $basename | wc -l`
if ("$num" == 0) then
  /bin/cp -f $basename:r.unknown $basename:r.out
  /bin/rm -f $basename.*
  exit 0
endif

# Clean up old files
/bin/rm -f $basename.*

# Setup initial subproblem
/bin/cp -f $basename $basename.unknown
/bin/cp -f $basename:r.log $basename.log

# Convert undecided TMs to new TMs
update $basename Assign_Undecideds.py --next_machine_num=$nextmachnum

# Check to see if this succeeded
if ("$status" != 0) then
  echo "Initial update failed"
  /bin/rm -f $basename.*
  exit 1
endif

# Generate the ".out" file containing all the original unknown machines and
# the results from the subproblem
cat $basename:r.unknown $basename.halt $basename.infinite $basename.undecided $basename.unknown > $basename:r.out

# Clean up subproblem files
/bin/rm -f $basename $basename.*
exit 0
