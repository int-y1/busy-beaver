The program to run in this directory is "Quick_Sim.py".  Usage:

    Quick_Sim.py [-b] [-p] [-r] [-vp] [-vs] [-br] TMfile [line#]

        -b:  Don't use a back symbol macro TM
        -p:  Don't use the prover
        -r:  Use the recursive prover

        -vp: Make the prover more verbose
        -vs: Make the simulator more verbose
        
        -br: Only produce summary information (brief)

        TMfile:  File contain TM descriptions (one per line)
        line#:   Use the TM on this line of "TMfile" (default 1)

The "TMfile" uses the following format to describe a m-state, n-symbol TM:

    [ [ (new_symbol_0_0, new_direction_0_0, new_state_0_0), ... ,
        (new_symbol_0_m, new_direction_0_n, new_state_0_m) ], ... ,
      [ (new_symbol_n_0, new_direction_m_0, new_state_n_0), ... ,
        (new_symbol_n_m, new_direction_m_n, new_state_n_m) ] ]

Here "new_symbol..." is a number between 0 and n-1, "new_direciton..." is
0 for left and 1 for right, and "new_state..." is a number between -1 and m-1
where -1 represents halt.

For example, for the 6x2_r TM this would be:

    [[(1, 1, 1), (0, 0, 5)], [(0, 1, 2), (0, 1, 3)], [(1, 0, 3), (1, 1, 4)], [(0, 0, 4), (0, 0, 3)], [(0, 1, 0), (1, 1, 2)], [(1, 0, 0), (1, 1, -1)]]

Note: this needs to all be on one line.

To run the code on this example try:

    Quick_Sim.py ../6x2_r.tm
